services:
  ip_syncer:
    image: kamuri/ip-syncer:0.0.2
    restart: unless-stopped
    env_file: .env
    container_name: syncer
    deploy:
      resources:
        limits:
          cpus: "0.01"
          memory: 10M

  haproxy:
    container_name: haproxy
    build:
      context: .
      args:
        IP_ADDR: ${IP_ADDR}
    ports:
      - 80:80
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.02"
          memory: 20M

  dashy:
    container_name: dashy
    image: lissy93/dashy
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    volumes:
      - $DASHY_CONFIG:/app/user-data
    ports:
      - "7575:8080"
    healthcheck:
      test: ["CMD", "node", "/app/services/healthcheck"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  jellyfin:
    container_name: jellyfin
    image: ghcr.io/jellyfin/jellyfin:10.10.7
    restart: unless-stopped
    ports:
      - "8096:8096"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=$TZ_INFO
    volumes:
      - $JELLYFIN_CONFIG:/config
      - $JELLYFIN_HOME:/data

  jellyseerr:
    image: ghcr.io/fallenbagel/jellyseerr:2.5.2
    container_name: jellyseerr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=$TZ_INFO
    volumes:
      - $JELLYSEERR_CONFIG:/app/config
    ports:
      - 5055:5055

  sonarr:
    container_name: sonarr
    image: ghcr.io/hotio/sonarr:release-4.0.14.2939
    restart: unless-stopped
    ports:
      - 8989:8989
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=$TZ_INFO
    volumes:
      - $SONARR_HOME:/data
      - $SONARR_CONFIG:/config

  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr:release-5.21.1.9799
    restart: unless-stopped
    ports:
      - "7878:7878"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=$TZ_INFO
    volumes:
      - $RADARR_CONFIG:/config
      - $RADARR_HOME:/data

  prowlarr:
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr:release-1.32.2.4987
    restart: unless-stopped
    ports:
      - "9696:9696"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=$TZ_INFO
    volumes:
      - $PROWLARR_CONFIG:/config

  bazarr:
    container_name: bazarr
    image: ghcr.io/hotio/bazarr:release-1.5.1
    restart: unless-stopped
    ports:
      - "6767:6767"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=$TZ_INFO
      - WEBUI_PORTS=6767/tcp,6767/udp
    volumes:
      - $BAZARR_CONFIG:/config
      - $BAZARR_HOME:/data

  flaresolverr:
    container_name: flaresolverr
    restart: unless-stopped
    image: ghcr.io/flaresolverr/flaresolverr:v3.3.21
    ports:
      - 8191:8191
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=$TZ_INFO

  prometheus:
    container_name: prometheus
    image: quay.io/prometheus/prometheus:v3.3.0
    restart: unless-stopped
    environment:
      - TZ=America/Fortaleza
    volumes:
      - ./prometheus:/etc/prometheus
    ports:
      - 9090:9090

  node_exporter:
    container_name: node_exporter
    image: quay.io/prometheus/node-exporter:latest
    command:
      - "--path.rootfs=/host"
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - "/:/host:ro,rslave"
